- name: Set Hostname to nimbusserver
  hostname:
    name: nimbusserver

- name: Disable automatic updates
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  loop:
  - packagekit.service
  - unattended-upgrades.service
  - apt-daily.timer
  - apt-daily.service
  - apt-daily-upgrade.timer
  - apt-daily-upgrade.service

- name: Stop and disable firewalld
  service:
    name: ufw
    enabled: no
    state: stopped

# - name: Disable SELinux
#   selinux:
#     state: disabled

- name: Update all installed packages
  apt:
    name: '*'
    state: latest
    update_cache: true
    # exclude:
    #   - ansible
    #   - docker-ce
    #   - google-chrome

# - name: Import nux-dextop GPG key
#   rpm_key:
#     state: present
#     key: http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
#     fingerprint: 561C 96BD 2F7F DC2A DB5A  FD46 E98B FBE7 85C6 CD8A
#     # Fingerprinted on 2021-07-01 - proceed carefully if this fails!

# - name: Install nux-dextop for Exfat Utilities
#   dnf:
#     name: http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm
#     state: present

- name: Install required OS packages
  apt:
    name:
    - maven
    - git
    - openjdk-8-jdk   # UFTdev assets
    - openjdk-11-jdk
    # - zlib.i686
    # - libstdc++.i686
    - python3-pip
    # - kernel-devel # For NV
    - telnet
    - dos2unix     # For processing scripts
    - exfat-fuse
    - exfatprogs
    # - device-mapper-persistent-data
    # - lvm2
    - jq
    - ftp           # Command line FTP
    - perl
    - cpanminus     # ChromeDriver downloader
    - libjson-perl  # ChromeDriver downloader
    - isc-dhcp-client
    - net-tools

- name: Update pip
  pip:
    name: pip
    state: latest

- name: Install python modules
  pip:
    name:
    - psutil  # Used by dconf module
    - docker  # Used by docker_network module

# INSTALL SCRIPTS
- name: Install nimbus scripts to /usr/local/bin
  template:
    src: "scripts/{{ item }}"
    dest: "{{ nimbus_install_dir }}"
    mode: 0755
    newline_sequence: '\n'
  loop: "{{ nimbus_scripts }}"

# Create symlink to java8 for legacy assets
- name: Create Java 8 symlink
  file:
    path:  /usr/lib/jvm/java-1.8.0-openjdk
    src: /usr/lib/jvm/java-8-openjdk-amd64
    state: link
