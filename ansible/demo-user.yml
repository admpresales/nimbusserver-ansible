- name: Create "demo" group
  group:
    name: "{{nimbus_group}}"
    state: present

- name: Add the 'demo' user
  user:
    name: "{{nimbus_user}}"
    state: present
    comment: Nimbus Demo User
    groups: "{{nimbus_group}}, docker, wheel"
    password: "{{ 'Password1'|password_hash('sha256', 'mysecretsalt') }}"
    append: yes

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: Create Demo User directories
  file:
    path: /home/{{nimbus_user}}/{{item}}
    state: directory
    mode: 0755
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"
  loop:
    - Desktop
    - .config
    - .docker
    - .config/autostart
  
- name: Add initial setup file to demo user's home directory
  copy:
    content: "yes"
    dest: /home/{{nimbus_user}}/.config/gnome-initial-setup-done

- name: Allow VMWare Drag and Drop
  file:
    path: /home/{{nimbus_user}}/.cache/vmware/drag_and_drop
    state: directory
    mode: 0777
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

#Configuration block - need to become demo to perform these changes
- block:
  - name: Configure Gnome Tweak Tool for Demo - Show Icons
    dconf: key="/org/gnome/desktop/background/show-desktop-icons" value="true" state=present
  - name: Configure Gnome Tweak Tool for Demo - Uncheck Mounted Volumes Icon
    dconf: key="/org/gnome/nautilus/desktop/volumes-visible" value="false" state=present
  - name: Configure Gnome Tweak Tool for Demo - Uncheck Network Icon
    dconf: key="/org/gnome/nautilus/desktop/network-icon-visible" value="false" state=present
  - name: Configure Gnome Tweak Tool for Demo - Uncheck Home Icon
    dconf: key="/org/gnome/nautilus/desktop/home-icon-visible" value="false" state=present
  - name: Configure Gnome Tweak Tool for Demo - Check Trash Icon
    dconf: key="/org/gnome/nautilus/desktop/trash-icon-visible" value="true" state=present
  - name: Configure Gnome Tweak Tool for Demo - Set Power Button to Nothing
    dconf: key="/org/gnome/settings-daemon/plugins/power/power-button-action" value="'nothing'" state=present
  - name: Configure Gnome Tweak Tool for Demo - Uncheck 'Show Application Menu' on Top Bar
    dconf:
      key: "/org/gnome/settings-daemon/plugins/xsettings/overrides"
      value: "{'Gtk/ShellShowsAppMenu': <0>}"
      state: present
  - name: Configure Gnome Tweak Tool - Check 'Show date' Application Menu on Top Bar
    dconf: key="/org/gnome/desktop/interface/clock-show-date" value="true" state=present
  - name: Configure Gnome Tweak Tool - Set Number of Workspaces to 1
    dconf: key="/org/gnome/desktop/wm/preferences/num-workspaces" value="1" state=present

  - name: Get current speaker state
    shell: amixer get Master | grep -q off;
    register: speaker_status
    failed_when:  "speaker_status.rc == 2"
    changed_when: false

#TODO: Make this idempotent
  - name: Mute speaker volume
    shell: amixer set Master mute
    when: speaker_status.rc == 1

  - name: Set Desktop Background Properties - Shading Type
    dconf: key="/org/gnome/desktop/background/color-shading-type" value="'solid'" state=present
  - name: Set Desktop Background Properties - Picture Option
    dconf: key="/org/gnome/desktop/background/picture-options" value="'wallpaper'" state=present
  - name: Set Desktop Background Properties - Picture Type
    dconf: key="/org/gnome/desktop/background/picture-uri" value="'file:////usr/share/gnome-control-center/pixmaps/noise-texture-light.png'" state=present
  - name: Set Desktop Background Properties - Primary Color
    dconf: key="/org/gnome/desktop/background/primary-color" value="'#425265'" state=present
  - name: Set Desktop Background Properties - Secondary Color
    dconf: key="/org/gnome/desktop/background/secondary-color" value="'#425265'" state=present
  - name: Power Configuration - Set Power Saving Blank Screen to 'Never'
    dconf: key="/org/gnome/desktop/session/idle-delay" value="uint32 0" state=present
  - name: Time Settings - Clock format for interface to 12H Clock
    dconf: key="/org/gnome/desktop/interface/clock-format" value="'12h'" state=present
  - name: Time Settings - Clock format for files to 12H Clock
    dconf: key="/org/gtk/settings/file-chooser/clock-format" value="'12h'" state=present
  - name: Icon Settings - Set zoom to 50% (small)
    dconf: key="/org/gnome/nautilus/icon-view/default-zoom-level" value="'small'" state=present
  - name: Icon Settings - Sort Directories Before Files
    dconf: key="/org/gtk/settings/file-chooser/sort-directories-first" value="true" state=present
  - name: Icon Settings - Sort By set to 'Type'
    dconf: key="/org/gnome/nautilus/preferences/default-sort-order" value="'type'" state=present
  - name: Get default terminal profile
    shell: gsettings get org.gnome.Terminal.ProfilesList default | cut -d "'" -f 2
    register: default_profile_gui
    changed_when: false
  - name: Terminal Settings - Set default columns to 132
    dconf: key="/org/gnome/terminal/legacy/profiles:/:{{ default_profile_gui.stdout }}/default-size-columns" value="132" state=present
  - name: Terminal Settings - Set default rows to 40
    dconf: key="/org/gnome/terminal/legacy/profiles:/:{{ default_profile_gui.stdout }}/default-size-rows" value="40" state=present
  become: yes
  become_user: "{{nimbus_user}}"
#End Configuration Block

#Only create the config.json if it doesn't already exists (force: no)
- name: Set credentials helper to pass
  copy:
    content: "{{ docker_credstore }}"
    dest: /home/{{nimbus_user}}/.docker/config.json
    force: no
    mode: 0644
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

- name: Import private key into gpg
  shell: gpg --import gpg/private.key
  register: gpgprivate_cmd
  failed_when: not "'already in secret keyring' in gpgprivate_cmd" and gpgprivate_cmd.rc >= 1
  changed_when: gpgprivate_cmd.rc == 0
  become: yes
  become_user: "{{nimbus_user}}"

- debug:
    msg: "{{gpgprivate_cmd}}"

- name: Import owner trust into gpg
  shell: gpg --import-ownertrust gpg/ownertrust.txt
  register: gpgtrust_cmd
  changed_when: gpgtrust_cmd.stderr != ""
  become: yes
  become_user: "{{nimbus_user}}"

- debug:
    msg: "{{gpgtrust_cmd}}"

#TODO: Not idempotent
- name: Initialize pass
  shell: pass init "Nimbus Demo"
  register: pass_cmd
  become: yes
  become_user: "{{nimbus_user}}"

#Setup SSH for root
- name: Create SSH directory for root
  file:
    path: /root/.ssh
    state: directory
    mode: 0755
  tags: [ 'root' ]

- name: Set authorized key for root
  authorized_key:
    user: root
    state: present
    key: '{{ pubkey }}'
  become: yes
  become_user: root
  tags: [ 'root' ]

- name: Copy id_rsa into ssh directory for root
  copy:
    remote_src: true
    src: "ssh/id_rsa"
    dest: /root/.ssh
    mode: 0600
  tags: [ 'root' ]

- name: Copy id_rsa.pub into ssh directory for root
  copy:
    remote_src: true
    src: "ssh/id_rsa.pub"
    dest: /root/.ssh
    mode: 0644
  tags: [ 'root' ]

# Setup SSH for demo
- name: Set authorized key for demo user
  authorized_key:
    user: "{{nimbus_user}}"
    state: present
    key: '{{ pubkey }}'
    
- name: Copy id_rsa into ssh directory for demo user
  copy:
    remote_src: true
    src: "ssh/id_rsa"
    dest: /home/{{nimbus_user}}/.ssh
    owner: "{{nimbus_user}}"
    mode: 0600

- name: Copy id_rsa.pub into ssh directory for demo user
  copy:
    remote_src: true
    src: "ssh/id_rsa.pub"
    owner: "{{nimbus_user}}"
    dest: /home/{{nimbus_user}}/.ssh
    mode: 0644
  
- name: Copy Launchers to Desktop
  copy:
    src: /usr/share/applications/{{item}}.desktop
    dest: /home/{{nimbus_user}}/Desktop
    mode: 0755
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"
  loop:
    - firefox
    - org.gnome.Terminal
    - org.gnome.Nautilus
    - gnome-system-monitor
    - google-chrome

- name: Remove user's existing chrome settings to update bookmarks
  file:
    path: /home/demo/.config/google-chrome
    state: absent

- name: Copy autostart script into demo user's autostart directory
  copy:
    remote_src: true
    src: "trustdesktop.desktop"
    dest: /home/{{nimbus_user}}/.config/autostart/trustdesktop.desktop
    mode: 0755
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

- name: Add default browser configuration to demo user
  copy:
    remote_src: true
    src: "config/mimeapps.list"
    dest: /home/{{nimbus_user}}/.config/mimeapps.list
    mode: 0644
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

- name: Add default resolution configuration to demo user
  copy:
    remote_src: true
    src: "config/monitors.xml"
    dest: /home/{{nimbus_user}}/.config/monitors.xml
    mode: 0644
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

- name: Create nimbus documents directory
  file:
    path: /opt/nimbus/docs
    state: directory
    mode: 0755
    owner: root
    group: wheel

- name: Create quickstart html page
  template:
    src: "quickstart.html"
    dest: /opt/nimbus/docs/quickstart.html
    mode: 0755
    owner: root
    group: wheel

- name: Create link for quickstart guide
  file:
    src: /opt/nimbus/docs/quickstart.html
    dest: /home/{{nimbus_user}}/Desktop/quickstart.html
    state: link
    force: true
    owner: "{{nimbus_user}}"
    group: "{{nimbus_group}}"

- name: Setup automatic login for demo
  lineinfile:
    line: "AutomaticLogin=demo"
    path: /etc/gdm/custom.conf
    insertafter: '^\[daemon\]'
    state: present

- name: Enable automatic login
  lineinfile:
    line: "AutomaticLoginEnable=True"
    path: /etc/gdm/custom.conf
    insertafter: '^AutomaticLogin=demo'
    state: present

- name: Copy Chrome Bookmarks to archive
  copy:
    src: "chrome/chrome-bookmarks.html"
    dest: /opt/google/chrome/archive/chrome-bookmarks.html
    mode: 0755
    owner: demo