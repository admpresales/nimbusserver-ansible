- name: Create "demo" group
  group:
    name: "{{ nimbus_group }}"
    state: present

- name: Add the 'demo' user
  user:
    name: "{{ nimbus_user }}"
    state: present
    comment: Nimbus Demo User
    groups: "{{ nimbus_group }}, docker, wheel"
    password: "{{ 'Password1'|password_hash('sha256', 'mysecretsalt') }}"
    append: yes

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: Create Demo User directories
  file:
    path: /home/{{ nimbus_user }}/{{ item }}
    state: directory
    mode: 0755
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"
  loop:
    - Desktop
    - .config
    - .docker
    - .config/autostart

- name: Add initial setup file to demo user's home directory
  copy:
    content: "yes"
    dest: /home/{{ nimbus_user }}/.config/gnome-initial-setup-done

- name: Allow VMWare Drag and Drop
  file:
    path: /home/{{ nimbus_user }}/.cache/vmware/drag_and_drop
    state: directory
    mode: 0777
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

# Configuration block - need to become demo to perform these changes
- become: yes
  become_user: "{{ nimbus_user }}"
  block:
  - name: Get default terminal profile
    shell: gsettings get org.gnome.Terminal.ProfilesList default | cut -d "'" -f 2
    register: default_profile_gui
    changed_when: false

  - name: Update user dconf settings
    dconf:
      key: "{{ item[0] }}"
      value: "{{ item[1] }}"
      state: present
    loop: "{{ config.items() | list }}"
    vars:
      profile: "{{ default_profile_gui.stdout }}"
      config:
        /org/gnome/desktop/background/show-desktop-icons: 'true'        # Show Icons
        /org/gnome/nautilus/desktop/volumes-visible: 'false'            # Uncheck Mounted Volumes Icon
        /org/gnome/nautilus/desktop/network-icon-visible: 'false'       # Uncheck Network Icon
        /org/gnome/nautilus/desktop/home-icon-visible: 'false'          # Uncheck Home Icon
        /org/gnome/nautilus/desktop/trash-icon-visible: 'true'          # Check Trash Icon
        /org/gnome/settings-daemon/plugins/power/power-button-action: "'nothing'"   # Set Power Button to Nothing
        # Uncheck 'Show Application Menu' on Top Bar
        /org/gnome/settings-daemon/plugins/xsettings/overrides: "{'Gtk/ShellShowsAppMenu': <0>}"
        /org/gnome/desktop/interface/clock-show-date: 'true'            # Check 'Show date' Application Menu on Top Bar
        /org/gnome/desktop/wm/preferences/num-workspaces: '1'           # Set Number of Workspaces to 1
        /org/gnome/desktop/background/color-shading-type: "'solid'"     # Shading Type
        /org/gnome/desktop/background/picture-options: "'wallpaper'"    # Picture Option
        /org/gnome/desktop/background/picture-uri: "''"                 # Picture URI
        /org/gnome/desktop/background/primary-color: "'#017293'"      # Primary Colour
        /org/gnome/desktop/background/secondary-color: "'#017293'"    # Secondary Colour
        /org/gnome/desktop/session/idle-delay: "uint32 0"             # Set Power Saving Blank Screen to 'Never'
        /org/gnome/desktop/interface/clock-format: "'12h'"            #  Clock format for interface to 12H Clock
        /org/gtk/settings/file-chooser/clock-format: "'12h'"          # Clock format for files to 12H Clock
        /org/gnome/nautilus/icon-view/default-zoom-level: "'small'"   # Set zoom to 50% (small)
        /org/gtk/settings/file-chooser/sort-directories-first: 'true' # Sort Directories Before Files
        /org/gnome/nautilus/preferences/default-sort-order: "'type'"  # Sort By set to 'Type'
        /org/gnome/terminal/legacy/profiles:/:{{ profile }}/default-size-columns: '132' # Set default columns to 132
        /org/gnome/terminal/legacy/profiles:/:{{ profile }}/default-size-rows: '40'     # Set default rows to 40
        /org/gnome/shell/disable-user-extensions: 'false'
        /org/gnome/shell/enabled-extensions: "['desktop-icons@gnome-shell-extensions.gcampax.github.com']"
        /org/gnome/shell/favorite-apps: "['firefox.desktop', 'google-chrome.desktop', 'org.gnome.Terminal.desktop', 'org.gnome.Nautilus.desktop']"
        

# TODO: Is this still required?
#   - name: Get current speaker state
#     shell: amixer get Master | grep -q off;
#     register: speaker_status
#     failed_when:  "speaker_status.rc == 2"
#     changed_when: false

# #TODO: Make this idempotent
#   - name: Mute speaker volume
#     command: amixer set Master mute
#     when: speaker_status.rc == 1
# #End Configuration Block

#Only create the config.json if it doesn't already exists (force: no)
- name: Set credentials helper to pass
  copy:
    content: "{{ docker_credstore }}"
    dest: /home/{{ nimbus_user }}/.docker/config.json
    force: no
    mode: 0644
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

- name: Import private key into gpg
  command: gpg --import gpg/private.key
  register: gpgprivate_cmd
  failed_when: not "'already in secret keyring' in gpgprivate_cmd" and gpgprivate_cmd.rc >= 1
  changed_when: gpgprivate_cmd.rc == 0
  become: yes
  become_user: "{{ nimbus_user }}"

- debug:
    msg: "{{ gpgprivate_cmd }}"

- name: Import owner trust into gpg
  command: gpg --import-ownertrust gpg/ownertrust.txt
  register: gpgtrust_cmd
  changed_when: not gpgtrust_cmd.stderr
  become: yes
  become_user: "{{ nimbus_user }}"

- debug:
    msg: "{{ gpgtrust_cmd }}"

#TODO: Not idempotent
- name: Initialize pass
  command: pass init "Nimbus Demo"
  register: pass_cmd
  become: yes
  become_user: "{{ nimbus_user }}"

#Setup SSH for root
- name: Create SSH directory for root
  file:
    path: /root/.ssh
    state: directory
    mode: 0755
  tags: [ 'root' ]

- name: Set authorized key for root
  authorized_key:
    user: root
    state: present
    key: '{{ pubkey }}'
  become: yes
  become_user: root
  tags: [ 'root' ]

- name: Copy id_rsa into ssh directory for root
  copy:
    remote_src: true
    src: "ssh/id_rsa"
    dest: /root/.ssh
    mode: 0600
  tags: [ 'root' ]

- name: Copy id_rsa.pub into ssh directory for root
  copy:
    remote_src: true
    src: "ssh/id_rsa.pub"
    dest: /root/.ssh
    mode: 0644
  tags: [ 'root' ]

# Setup SSH for demo
- name: Set authorized key for demo user
  authorized_key:
    user: "{{ nimbus_user }}"
    state: present
    key: '{{ pubkey }}'

- name: Copy id_rsa into ssh directory for demo user
  copy:
    remote_src: true
    src: "ssh/id_rsa"
    dest: /home/{{ nimbus_user }}/.ssh
    owner: "{{ nimbus_user }}"
    mode: 0600

- name: Copy id_rsa.pub into ssh directory for demo user
  copy:
    remote_src: true
    src: "ssh/id_rsa.pub"
    owner: "{{ nimbus_user }}"
    dest: /home/{{ nimbus_user }}/.ssh
    mode: 0644

- name: Copy Launchers to Desktop
  copy:
    src: /usr/share/applications/{{ item }}.desktop
    dest: /home/{{ nimbus_user }}/Desktop
    mode: 0755
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"
  loop:
    - firefox
    - org.gnome.Terminal
    - org.gnome.Nautilus
    - gnome-system-monitor
    - google-chrome

- name: Remove user's existing chrome settings to update bookmarks
  file:
    path: /home/demo/.config/google-chrome
    state: absent

- name: Copy autostart script into demo user's autostart directory
  copy:
    remote_src: true
    src: "trustdesktop.desktop"
    dest: /home/{{ nimbus_user }}/.config/autostart/trustdesktop.desktop
    mode: 0755
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

- name: Add default browser configuration to demo user
  copy:
    remote_src: true
    src: "config/mimeapps.list"
    dest: /home/{{ nimbus_user }}/.config/mimeapps.list
    mode: 0644
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

- name: Add default resolution configuration to demo user
  copy:
    remote_src: true
    src: "config/monitors.xml"
    dest: /home/{{ nimbus_user }}/.config/monitors.xml
    mode: 0644
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

- name: Create nimbus documents directory
  file:
    path: /opt/nimbus/docs
    state: directory
    mode: 0755
    owner: root
    group: wheel

- name: Create readme html page
  template:
    src: "README.html"
    dest: /opt/nimbus/docs/README.html
    mode: 0755
    owner: root
    group: wheel

- name: Create link for readme
  file:
    src: /opt/nimbus/docs/README.html
    dest: /home/{{ nimbus_user }}/Desktop/README.html
    state: link
    force: true
    owner: "{{ nimbus_user }}"
    group: "{{ nimbus_group }}"

- name: Setup automatic login for demo
  lineinfile:
    line: "AutomaticLogin=demo"
    path: /etc/gdm/custom.conf
    insertafter: '^\[daemon\]'
    state: present

- name: Enable automatic login
  lineinfile:
    line: "AutomaticLoginEnable=True"
    path: /etc/gdm/custom.conf
    insertafter: '^AutomaticLogin=demo'
    state: present

- name: Disable automatic login on AWS
  lineinfile:
    line: ExecStartPre=-/usr/bin/bash -c 'if curl --connect-timeout 1 http://169.254.169.254; then sed -i.bk "/AutomaticLogin/d" /etc/gdm/custom.conf; fi'
    path: /usr/lib/systemd/system/gdm.service
    insertafter: '^\[Service\]'
    state: present

- name: Get latest chrome bookmarks
  get_url:
    url: https://raw.githubusercontent.com/admpresales/nimbus-commons/master/chrome-bookmarks.html
    dest: /opt/google/chrome/archive/chrome-bookmarks.html
    mode: 0755
    owner: demo