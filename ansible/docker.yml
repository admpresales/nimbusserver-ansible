# HOSTS SETUP
- name: Download standard nimbus hosts file
  url_get:
    url: "https://raw.githubusercontent.com/admpresales/nimbus-commons/master/hosts"
    dest: /etc/hosts

- name: Use local address for nimbusserver
  lineinfile:
      path: hosts.txt
      state: present
      backrefs: true
      regexp: "^\\s*\\d+\\.\\d+\\.\\d+\\.\\d+(\\s+nimbusserver.*)$"
      line: "172.50.0.1 \\1"

# INSTALL PASS
- name: Download password-store
  unarchive:
    src: "https://git.zx2c4.com/password-store/snapshot/password-store-{{ pass_version }}.tar.xz"
    dest: "/tmp"
    remote_src: yes

- name: Install password-store
  make:
    chdir: "/tmp/password-store-{{ pass_version }}"
    target: "install"
  become: true

- name: Cleanup password-store install files
  file:
    path: "/tmp/password-store-{{ pass_version }}"
    state: "absent"

- name: Configure Docker Community Edition yum repository
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

# INSTALL DOCKER
- name: Install Docker Community Edition
  dnf:
    name: docker-ce-{{ docker_version }}

- name: Enable docker over TCP
  lineinfile:
    path: '/lib/systemd/system/docker.socket'
    line: ListenStream=2375
    insertafter: '\[Socket\]'

- name: Enable and start Docker service
  systemd:
    name: docker
    enabled: yes
    state: started
    daemon_reload: yes

- name: Install Docker python packages
  pip:
    name: docker-compose=={{ compose_version }}
    executable: pip-3

# NETWORK SETUP
- name: Create Docker network demo-net
  docker_network:
    name: demo-net
    appends: true
    ipam_config:
      - subnet: '172.50.0.0/16'
        gateway: 172.50.0.1

# INSTALL FROM GITHUB
# docker-credentials-pass, docker-app, nimbusapp
- name: Get Latest release info for docker-credential-helps
  uri:
    url: https://api.github.com/repos/docker/docker-credential-helpers/releases
    return_content: true
  register: dockercredentials_json_reponse

- name: "Download releases from Github: docker-credential-pass, docker-app-linux, nimbusapp"
  unarchive:
    src: "{{ item }}"
    dest: "{{ nimbus_install_dir }}"
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  vars:
    helper_version: "{{ dockercredentials_json_reponse.json[0].tag_name }}"
  loop:
    - https://github.com/docker/docker-credential-helpers/releases/download/{{ helper_version }}/docker-credential-pass-{{ helper_version }}-amd64.tar.gz
    - https://github.com/admpresales/nimbusapp/releases/latest/download/nimbusapp.tar.gz
    - https://github.com/docker/app/releases/download/{{ dockerapp_tag }}/docker-app-linux.tar.gz

- name: Rename docker-app binary and set group ownership to docker
  copy:
    remote_src: true
    src: "{{ nimbus_install_dir }}/docker-app-linux"
    dest: "{{ nimbus_install_dir }}/docker-app"
    group: docker
    mode: 0775

# INSTALL SCRIPTS
- name: Install nimbus scripts to /usr/local/bin
  template:
    src: "scripts/{{ item }}"
    dest: "{{ nimbus_install_dir }}"
    mode: 0755
    newline_sequence: '\n'
  loop: "{{ nimbus_scripts }}"
