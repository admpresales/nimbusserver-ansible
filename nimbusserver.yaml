- hosts: localhost
  remote_user: root
  become: yes

  tasks:
  - name: Install Gnome Desktop
    yum:
      name: "@^GNOME Desktop"
  - name: Install Graphical Administration Tools
    yum:
      name: "@Graphical Administration Tools"
  - name: Disable initial-setup-graphical.service
    service: name=initial-setup-graphical enabled=no state=stopped
  - name: Create link for gnome desktok
    file:
      src: /lib/systemd/system/runlevel5.target
      dest: /etc/systemd/system/default.target
      state: link
      force: true
  - name: Update all installed packages
    yum: name=* state=latest
  - name: Disable (mask) automatic updates
    systemd:
      name: packagekit.service
      masked: yes
  - name: Add the 'demo' user
    user:
      name: demo
      comment: demo
      password: Password1
  - name: Check if firewalld exists
    stat: path=/etc/init.d/firewalld
    register: firewalld_status
  - name: Stop and disable firewalld
    service: name=firewalld enabled=no state=stopped
    when: firewalld_status.stat.exists
  - name: Disable SELinux
    selinux:
      state: disabled
  - name: Add nimbusserver to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: 172.50.0.1  nimbusserver nimbusserver.aos.com
  - name: Add nimbusclient to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: 172.40.0.1  nimbusclient
  - name: Allow VMWare Drag and Drop
    file:
      path: /home/demo/.cache/vmware/drag_and_drop
      state: directory
      mode: 0777
  - name: Install Nimbus YUM packages
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - maven
      - git
      - gcc-c++
      - java-1.8.0-openjdk-devel
      - epel-release
      - rpm-build
      - zlib.i686
      - libstdc++.i686
      - python-pip
  - name: Install kernel-devel package for NV
    yum:
      name: kernel-devel
  - name: Install Telnet
    yum:
      name: telnet
  - name: Install Dos2Unix
    yum:
      name: dos2unix
  - name: Install nux-dextop for Exfat Utilities
    yum:
      name: http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm
      state: present
  - name: Install Exfat Utilities
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - exfat-utils
      - fuse-exfat
  - name: Install xrdp
    yum:
      name: xrdp
  - name: Configure xrdp services
    systemd:
      name: xrdp
      state: started
      enabled: true
  - name: Change Maximum Sessions to 1 in sesman.ini for xrdp
    replace:
      path: /etc/xrdp/sesman.ini
      regexp: '^(.*)MaxSessions(.*)$'
      replace: 'MaxSessions=1'
      backup: yes
  - name: Configure Google Chrome yum repository
    yum_repository:
      name: google-chrome
      description: google-chrome
      baseurl: http://dl.google.com/linux/chrome/rpm/stable/$basearch
      enabled: yes
      gpgcheck: yes
      gpgkey: https://dl-ssl.google.com/linux/linux_signing_key.pub
  - name: Install Google Chrome
    yum:
      name: google-chrome-stable
  - name: Configure Docker Community Edition yum repository
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
  - name: Install Docker yum Packages
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
  - name: Install Docker Community Edition
    yum:
      name: docker-ce
  - name: Enable and start Docker service
    service: name=docker enabled=yes state=started
  - name: Add demo user to docker group
    user:
      name: demo
      groups: docker
      append: yes
  - name: Install Docker python library
    pip:
      name: docker
  - name: Create Docker network demo-net
    docker_network:
      name: demo-net
      ipam_options:
        subnet: '172.50.0.0/16'
        gateway: 172.50.0.1
  - name: Install Docker Compose library
    pip:
      name: docker-compose
  - name: Get Latest release info for Docker App
    uri:
      url: https://api.github.com/repos/docker/app/releases
      return_content: true
    register: json_reponse
  - name: Download docker-app
    unarchive:
      src: "https://github.com/docker/app/releases/download/{{ json_reponse.json[0].name }}/docker-app-linux.tar.gz"
      dest: /usr/local/bin
      remote_src: yes
  - name: Rename docker-app binary and set group ownership to docker
    copy:
      remote_src: true
      src: /usr/local/bin/docker-app-linux
      dest: /usr/local/bin/docker-app
      group: docker
      mode: 0775
  - name: Install filezilla
    yum:
      name: filezilla