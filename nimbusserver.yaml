- hosts: localhost
  remote_user: root
  become: yes

  vars:
    uft_extension_details: { "external_crx": "/opt/google/chrome/archive/uft.crx", "external_version": "14.3.3652.1"}
    uft_extension_id: hpoiplhbnkgnpjkkilfahkkcimachkkj
    uft_firefox_extension_id: ec8030f7-c20a-464f-9b0e-13a3a9e97384
    chrome_password_manager_policy: { "PasswordManagerEnabled" : false }
    pubkey: "{{ lookup('file', './id_rsa.pub') }}"
    firefox_install_dir: /usr/lib64/firefox


  tasks:
  - name: Set Hostname to nimbusserver
    hostname:
      name: nimbusserver
  - name: Install Gnome Desktop
    yum:
      name: "@^GNOME Desktop"
  - name: Install Graphical Administration Tools
    yum:
      name: "@Graphical Administration Tools"
  - name: Disable initial-setup-graphical.service
    service: name=initial-setup-graphical enabled=no state=stopped
  - name: Create link for gnome desktop
    file:
      src: /lib/systemd/system/runlevel5.target
      dest: /etc/systemd/system/default.target
      state: link
      force: true
  - name: Update all installed packages
    yum: name=* state=latest
  - name: Disable (mask) automatic updates
    systemd:
      name: packagekit.service
      masked: yes
  - name: Add the 'demo' user
    user:
      name: demo
      state: present
      comment: Nimbus Demo User
      groups: "demo, wheel, docker"
      append: yes
  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s
  - name: Set password for demo user
    shell: echo demo:Password1 | sudo chpasswd
    no_log: True
  - name: Stop and disable firewalld
    service: name=firewalld enabled=no state=stopped
  - name: Disable SELinux
    selinux:
      state: disabled
  - name: Add nimbusserver to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: 172.50.0.1  nimbusserver nimbusserver.aos.com
  - name: Add nimbusclient to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: 172.40.0.1  nimbusclient
  - name: Allow VMWare Drag and Drop
    file:
      path: /home/demo/.cache/vmware/drag_and_drop
      state: directory
      mode: 0777
  - name: Install Nimbus YUM packages
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - maven
      - git
      - gcc-c++
      - java-1.8.0-openjdk-devel
      - epel-release
      - rpm-build
      - zlib.i686
      - libstdc++.i686
      - python-pip
      - python-devel
  - name: Install psutil to support dconf changes
    pip:
      name: psutil
  - block:
    - name: Configure Gnome Tweak Tool for Demo - Show Icons
      dconf: key="/org/gnome/desktop/background/show-desktop-icons" value="true" state=present
    - name: Configure Gnome Tweak Tool for Demo - Uncheck Mounted Volumes Icon
      dconf: key="/org/gnome/nautilus/desktop/volumes-visible" value="false" state=present
    - name: Configure Gnome Tweak Tool for Demo - Uncheck Network Icon
      dconf: key="/org/gnome/nautilus/desktop/network-icon-visible" value="false" state=present
    - name: Configure Gnome Tweak Tool for Demo - Uncheck Home Icon
      dconf: key="/org/gnome/nautilus/desktop/home-icon-visible" value="false" state=present
    - name: Configure Gnome Tweak Tool for Demo - Check Trash Icon
      dconf: key="/org/gnome/nautilus/desktop/trash-icon-visible" value="true" state=present
    - name: Configure Gnome Tweak Tool for Demo - Set Power Button to Nothing
      dconf: key="/org/gnome/settings-daemon/plugins/power/power-button-action" value="'nothing'" state=present
    - name: Configure Gnome Tweak Tool for Demo - Uncheck 'Show Application Menu' on Top Bar
      dconf:
        key: "/org/gnome/settings-daemon/plugins/xsettings/overrides"
        value: "{'Gtk/ShellShowsAppMenu': <0>}"
        state: present
    - name: Configure Gnome Tweak Tool - Check 'Show date' Application Menu on Top Bar
      dconf: key="/org/gnome/desktop/interface/clock-show-date" value="true" state=present
    - name: Configure Gnome Tweak Tool - Set Number of Workspaces to 1
      dconf: key="/org/gnome/desktop/wm/preferences/num-workspaces" value="1" state=present
    - name: Mute speaker volume
      shell: amixer set Master mute
    - name: Set Desktop Background Properties - Shading Type
      dconf: key="/org/gnome/desktop/background/color-shading-type" value="'solid'" state=present
    - name: Set Desktop Background Properties - Picture Option
      dconf: key="/org/gnome/desktop/background/picture-options" value="'wallpaper'" state=present
    - name: Set Desktop Background Properties - Picture Type
      dconf: key="/org/gnome/desktop/background/picture-uri" value="'file:////usr/share/gnome-control-center/pixmaps/noise-texture-light.png'" state=present
    - name: Set Desktop Background Properties - Primary Color
      dconf: key="/org/gnome/desktop/background/primary-color" value="'#425265'" state=present
    - name: Set Desktop Background Properties - Secondary Color
      dconf: key="/org/gnome/desktop/background/secondary-color" value="'#425265'" state=present
    - name: Power Configuration - Set Power Saving Blank Screen to 'Never'
      dconf: key="/org/gnome/desktop/session/idle-delay" value="uint32 0" state=present
    - name: Time Settings - Clock format for interface to 12H Clock
      dconf: key="/org/gnome/desktop/interface/clock-format" value="'12h'" state=present
    - name: Time Settings - Clock format for files to 12H Clock
      dconf: key="/org/gtk/settings/file-chooser/clock-format" value="'12h'" state=present
    - name: Icon Settings - Set zoom to 50% (small)
      dconf: key="/org/gnome/nautilus/icon-view/default-zoom-level" value="'small'" state=present
    - name: Icon Settings - Sort Directories Before Files
      dconf: key="/org/gtk/settings/file-chooser/sort-directories-first" value="true" state=present
    - name: Icon Settings - Sort By set to 'Type'
      dconf: key="/org/gnome/nautilus/preferences/default-sort-order" value="'type'" state=present
    - name: Get default terminal profile
      dconf:
        key: "/org/gnome/terminal/legacy/profiles:"
        state: read
      register: default_profile_gui
    - name: Terminal Settings - Set default columns to 132
      dconf: key="/org/gnome/terminal/legacy/profiles:/{{ default_profile_gui }}/default-size-columns" value="132" state=present
    - name: Terminal Settings - Set default rows to 40
      dconf: key="/org/gnome/terminal/legacy/profiles:/{{ default_profile_gui }}/default-size-rows" value="40" state=present
    become: yes
    become_user: demo

  - name: Install kernel-devel package for NV
    yum:
      name: kernel-devel
  - name: Install Telnet
    yum:
      name: telnet
  - name: Install Dos2Unix
    yum:
      name: dos2unix
  - name: Install nux-dextop for Exfat Utilities
    yum:
      name: http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm
      state: present
  - name: Install Exfat Utilities
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - exfat-utils
      - fuse-exfat
  - name: Install xrdp
    yum:
      name: xrdp
  - name: Configure xrdp services
    systemd:
      name: xrdp
      state: started
      enabled: true
  - name: Change Maximum Sessions to 1 in sesman.ini for xrdp
    replace:
      path: /etc/xrdp/sesman.ini
      regexp: '^(.*)MaxSessions(.*)$'
      replace: 'MaxSessions=1'
      backup: yes
  - name: Configure Google Chrome yum repository
    yum_repository:
      name: google-chrome
      description: google-chrome
      baseurl: http://dl.google.com/linux/chrome/rpm/stable/$basearch
      enabled: yes
      gpgcheck: yes
      gpgkey: https://dl-ssl.google.com/linux/linux_signing_key.pub
  - name: Install Google Chrome
    yum:
      name: google-chrome-stable
  - name: Create managed policies directory for chrome
    file:
      path: /etc/opt/chrome/policies/managed
      state: directory
      mode: 0755
  - name: Create recommended policies directory for chrome
    file:
      path: /etc/opt/chrome/policies/recommended
      state: directory
      mode: 0755
  - name: Create external extensions directory for chrome
    file:
      path: /opt/google/chrome/extensions
      state: directory
      mode: 0755
  - name: Create archive directory for extensions
    file:
      path: /opt/google/chrome/archive
      state: directory
      mode: 0755
  - name: Copy master preferences file for Chrome into Chrome
    copy:
      remote_src: true
      src: chrome/master_preferences
      dest: /opt/google/chrome/master_preferences
  - name: Copy password manager policy into Chrome recommended policies
    copy: content="{{ chrome_password_manager_policy }}" dest=/etc/opt/chrome/policies/recommended/password_policy.json
  - name: Get UFT Extension for Chrome
    uri:
      url: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=49.0&x=id%3D{{ uft_extension_id }}%26installsource%3Dondemand%26uc
      dest: /opt/google/chrome/archive/uft.crx
      status_code: 200,304
  - name: Create plugin details for UFT Extension for Chrome
    copy: content="{{ uft_extension_details }}" dest=/opt/google/chrome/extensions/{{ uft_extension_id }}.json
  - name: Copy Chrome Bookmarks to archive
    copy:
      src: chrome/chrome-bookmarks.html
      dest: /opt/google/chrome/archive/chrome-bookmarks.html
      mode: 0755
      owner: demo
  - name: Copy Chrome Launcher to Desktop
    copy:
      src: /usr/share/applications/google-chrome.desktop
      dest: /home/demo/Desktop
      mode: 0755
      owner: demo
  #- name: Make Chrome Launcher Trusted
  #  shell: gio set /home/demo/Desktop/google-chrome.desktop "metadata::trusted" yes

  - name: Configure Docker Community Edition yum repository
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
  - name: Install Docker yum Packages
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
  - name: Install Docker Community Edition
    yum:
      name: docker-ce
  - name: Enable and start Docker service
    service: name=docker enabled=yes state=started
  - name: Add demo user to docker group
    user:
      name: demo
      groups: docker
      append: yes
  - name: Install Docker python library
    pip:
      name: docker
  - name: Create Docker network demo-net
    docker_network:
      name: demo-net
      ipam_options:
        subnet: '172.50.0.0/16'
        gateway: 172.50.0.1
  - name: Install Docker Compose library
    pip:
      name: docker-compose
  - name: Get Latest release info for Docker App
    uri:
      url: https://api.github.com/repos/docker/app/releases
      return_content: true
    register: dockerapp_json_reponse
  - name: Download docker-app
    unarchive:
      src: "https://github.com/docker/app/releases/download/{{ dockerapp_json_reponse.json[0].name }}/docker-app-linux.tar.gz"
      dest: /usr/local/bin
      remote_src: yes
  - name: Rename docker-app binary and set group ownership to docker
    copy:
      remote_src: true
      src: /usr/local/bin/docker-app-linux
      dest: /usr/local/bin/docker-app
      group: docker
      mode: 0775
  - name: Create SSH directory for root
    file:
      path: /root/.ssh
      state: directory
      mode: 0777
  - name: Copy id_rsa into ssh directory for root
    copy:
      remote_src: true
      src: id_rsa
      dest: /root/.ssh
      mode: 600
  - name: Copy id_rsa.pub into ssh directory for root
    copy:
      remote_src: true
      src: id_rsa.pub
      dest: /root/.ssh
      mode: 644
  - name: Set authorized key for root
    authorized_key:
      user: root
      state: present
      key: '{{ pubkey }}'
    become: yes
    become_user: root
  - name: Set authorized key for root
    authorized_key:
      user: root
      state: present
      key: '{{ pubkey }}'
  - name: Copy id_rsa into ssh directory for root
    copy:
      remote_src: true
      src: id_rsa
      dest: /root/.ssh
      mode: 600
  - name: Copy id_rsa.pub into ssh directory for root
    copy:
      remote_src: true
      src: id_rsa.pub
      dest: /root/.ssh
      mode: 644
  - name: Set authorized key for demo user
    authorized_key:
      user: demo
      state: present
      key: '{{ pubkey }}'
  - name: Copy id_rsa into ssh directory for demo user
    copy:
      remote_src: true
      src: id_rsa
      dest: /home/demo/.ssh
      owner: demo
      mode: 600
  - name: Copy id_rsa.pub into ssh directory for demo user
    copy:
      remote_src: true
      src: id_rsa.pub
      owner: demo
      dest: /home/demo/.ssh
      mode: 644
  - name: Install filezilla
    yum:
      name: filezilla

  - name: Copy Firefox Launcher to Desktop
    copy:
      src: /usr/share/applications/firefox.desktop
      dest: /home/demo/Desktop
      mode: 0755
      owner: demo
  - name: Copy local-settings to Firefox default directory
    copy:
      src: firefox/local-settings.js
      dest: /usr/lib64/firefox/defaults/pref
      mode: 0644
  - name: Copy mozilla.cfg to Firefox install directory
    copy:
      src: firefox/mozilla.cfg
      dest: /usr/lib64/firefox/mozilla.cfg
      mode: 0644
  - name: Copy policies to Firefox install directory
    copy:
      src: firefox/policies.json
      dest: "{{ firefox_install_dir }}/distribution/policies.json"
      mode: 0644
  - name: Copy LeanFT extension to Firefox extensions directory
    copy:
      src: firefox/FT.FirefoxAgent@microfocus.com.xpi
      dest: "{{ firefox_install_dir }}/distribution/extensions/FT.FirefoxAgent@microfocus.com.xpi"

  - name: Copy vinagre launcher to desktop
    copy:
      src: /usr/share/applications/vinagre.desktop
      dest: /home/demo/Desktop
      mode: 0755
      owner: demo
      group: demo
  - name: Change name of vinagre icon to LeanFT Viewer
    lineinfile:
      path: /home/demo/Desktop/vinagre.desktop
      regexp: '^Name[en_US]='
      line: 'Name[en_US]=LeanFT Viewer'
  - name: Change Execution Statement for LeanFT Viewer
    lineinfile:
      path: /home/demo/Desktop/vinagre.desktop
      regexp: '^Exec='
      line: 'Exec=vinagre ::5900'

  - name: Copy gnome-terminal launcher to desktop
    copy:
      src: /usr/share/applications/org.gnome.Terminal.desktop
      dest: /home/demo/Desktop
      mode: 0755
      owner: demo
      group: demo